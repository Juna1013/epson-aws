# 発表内容（川崎くん、白石さん）

# テーマ：S3，lambda + API Gatewayの業務利用

AWSサービスの特徴を理解し実際の業務や製品・サービスにどう活かせるかを考察

**必要なときだけ使える・自動化しやすい・セキュリティ制御が柔軟にできる！**

**静的コンテンツの配信、イベント駆動型処理、大量データの保存・分析**

## 1.  S3の利点

- サーバーレスで管理が不要！（サーバー構築・運用・保守が不要）
- 使用するときだけ費用が掛かる→ コスト効率が良い！
- **OSアップデート不要** → 運用負荷が大幅に軽減
    
    → アップデートの手間が省ける！
    
- 容量無制限で自動スケーリングできる！
- 様々なセキュリティ機能を持ちカスタマイズすることが可能（アクセス制御、CORSなどによりセキュリティ管理ができる）

### →データベースをいじるだけで容易に編集できる簡単なwebサイト構築

- **利点を活用した業務内容**
    - 社内日程管理アプリ
    - 欲しい製品選定アプリ
    - 製品の品質向上
        - アクセスに応じて（情報が必要な顧客にのみアクセスさせられる）
        - セキュリティ管理とアクセス制御
        - 静的ページ配信
        - S3は軽量・高速・低コストで、販売支援に最適なストレージ基盤

## ２．S3の欠点

- 動的処理ができない（htmlなどの内容を逐次変更しないといけない）
- 決まった形のデータしか置けない
- 次回起動時に時間がかかる
- 複雑な処理ができない（機械学習ができない）

| **欠点** | **説明** | **補完方法** |
| --- | --- | --- |
| 動的処理ができない | HTMLなどを手動で更新する必要あり | Lambdaで動的生成、CloudFrontでキャッシュ制御 |
| 決まった形のデータしか置けない | オブジェクトストレージなので構造化が必要 | JSON/CSVで整形、Athenaでクエリ |
| 起動時に時間がかかる | 初回アクセス時に遅延があることも | CloudFrontで高速化 |
| 複雑な処理ができない | 機械学習や重い計算には不向き | SageMakerやEC2と連携して補完 |

## ３．EC2と比較したときの利点・欠点

- イベント駆動型の自動処理ができる
• S3にファイルがアップロードされた瞬間にLambdaが起動
- 例：ファイルアップロード時の画像変換、データ整形）
- AI運用時にかかるコストが低い
- セキュリティとアクセス制御が柔軟
• 社内外のシステムや端末から安全にデータ送受信が可能

## ２．Lambda + API Gatewayの利点

## ３．S３の特徴

**軽量・高速・低コスト・サーバーレス・セキュア・スケーラブル**

| **コンポーネント** | **コードの格納** | **説明** |
| --- | --- | --- |
| **Client** | ❌（コードは持たない） | APIを呼び出すだけ。処理はサーバー側。 |
| **API Gateway** | ❌（コードは持たない） | リクエストのルーティングや認証を担当。 |
| **AWS Lambda** | ✅（コードが格納される） | 実際の処理ロジック（Python, Node.jsなど）を実行する場所。 |
| **Amazon S3** | ❌（コードは持たない） | ファイルやデータ（画像、CSVなど）を保存するストレージ。 |

| **利点** | **説明** | **業務活用例** |
| --- | --- | --- |
| サーバーレスで管理不要 | サーバー構築・保守が不要 | 静的Webサイト、社内ポータル |
| 使用時のみ課金 | アクセスや保存量に応じて課金 | コスト効率の高い資料配信 |
| OSアップデート不要 | AWSが管理 | 運用負荷の軽減 |
| 容量無制限・自動スケーリング | データ量に応じて自動対応 | 大量の製品画像・ログ保存 |
| セキュリティ機能が豊富 | IAM、CORS、署名付きURLなど | 顧客別アクセス制御、社外共有 |
| 静的ページ配信 | HTML/CSS/JSを直接ホスト可能 | 製品紹介、キャンペーンページ |
| 軽量・高速・低コスト | 静的コンテンツに最適 | 販売支援、社内報告サイト |

## ３．エプソンでの実際の業務例

- **欲しい製品選定アプリ**：顧客の条件入力 → Lambdaで商品提案 → S3から画像・情報表示

→ 

- **製品品質向上支援**：検査画像・ログをS3に保存 → Lambdaで分析 → NG品予測
- **顧客別ポータルサイト**：S3で静的ページをホスト → 署名付きURLで限定公開
- **射出成型の精度分析**：インクジェットの部品製造における温度や圧力などのデータをS3に保存 → Lambdaで異常検知（ルールべース）→ 不良品予測

→ 

- **印刷機の色分析**：画像データをS3に保存 → Lambdaで色解析 → 品質管理に活用
- **社内日程管理アプリ**：フォーム入力 → API → Lambda → S3保存 → カレンダー表示
- データ分析のための（例：インクジェットプリンター部品の射出成型部分の精度、印刷機の色分析など）
- **良さ：大量生産する中で大量のデータを効率的に格納・保存・保守・処理ができ、効率的に不良品発生予測ができる。新しい重要なポイントができたときに容易に追加可能。**
- **例：社内日程管理アプリ**
    - 新しい日程をカレンダーに追加するために、フォームに入力してAPI接続してカレンダーに新たな予定を表示させる。
    
    | **活用例** | **S3ならではの強み** | **EC2との違い** |
    | --- | --- | --- |
    | **ファイルアップロード時の自動処理（画像変換・分類）** | Lambdaとのイベント駆動型連携 | EC2ではcronや常駐プロセスが必要 |
    | **署名付きURLで一時的に資料共有** | URL単位でアクセス制御可能 | EC2ではユーザー認証やセッション管理が必要 |
    | **社内教育動画の高速配信** | CloudFront連携でグローバル配信 | EC2では動画配信サーバーの構築が必要 |
    | **多言語対応ページの切り替え** | 言語別HTMLをS3に保存 → URLで切り替え | EC2では動的レンダリングが必要 |
    | **製品レビュー収集 → 自動表示** | S3に保存 → Lambdaで整形 → 静的表示 | EC2ではDB＋アプリ構築が必要 |
    
    ---
    
    # **📌 まとめ：S3がEC2より優れている点（業務利用において）**
    
    | **項目** | **S3** | **EC2** |
    | --- | --- | --- |
    | 運用負荷 | 低（サーバーレス） | 高（OS管理・保守） |
    | コスト | 使用時のみ課金 | 常時稼働で課金 |
    | スケーラビリティ | 自動・無制限 | 手動・制限あり |
    | セキュリティ制御 | URL単位・IAMで柔軟 | OS・アプリレベルで複雑 |
    | 静的コンテンツ配信 | 直接ホスト可能 | Webサーバー構築が必要 |
    | イベント駆動処理 | Lambda連携で自動化 | 自前でスクリプト管理が必要 |
    
    ➡ **製品販売支援・社内業務効率化・データ分析・外部連携**など、幅広い業務に活用
    

# **🏭 射出成型 × データ分析 × AWS構成の活用例（なし）**

### **🎯 目的：**

- 成型条件（温度、圧力、時間など）と製品品質（寸法、外観、強度など）の関係を分析。
- 不良品の発生要因を特定し、予防策を講じる。

# **🔄 全体の流れ（AWSサービスの役割）**

### **① Client（成型機 or 工場端末）**

- 成型機からセンサーデータ（温度、圧力、サイクル時間など）を定期的に送信。
- 検査員が製品の画像や寸法データをアップロード。

### **② API Gateway**

- 成型機や端末からのデータ送信を受け付ける。
- Lambda関数にリクエストをルーティング。

### **③ AWS Lambda**

- データを受け取り、整形・検証。
- Amazon S3に保存。
- 必要に応じてリアルタイムで異常検知（例：圧力が規定外 → アラート）。
- 分析用にデータを集計・加工。

### **④ Amazon S3**

- 成型条件、検査結果、画像などを保存。
- BIツールや機械学習モデルが分析に利用。

---

# **📊 分析で得られる知見の例**

| **分析対象** | **得られる知見** | **活用方法** |
| --- | --- | --- |
| 成型条件 vs 不良率 | 高温・高圧時に不良率が上昇 | 成型条件の最適化 |
| 成型サイクル時間 | サイクルが短すぎると寸法不良 | 機械設定の見直し |
| 成型機ごとの傾向 | 特定機械で不良率が高い | メンテナンスや交換判断 |
| 製品画像のAI判定 | 傷・変形の自動検出 | 検査工程の自動化 |

---

# **🧠 Lambdaに格納されるコードの例（簡略）**

---

# **🧪 応用：機械学習による予測**

- S3に蓄積されたデータを使って、LambdaやSageMakerで「不良発生予測モデル」を構築。
- API Gateway経由でリアルタイムに予測結果を取得。
- 成型条件を自動調整するシステムへの応用も可能。

---

# **📌 まとめ**

| **AWSサービス** | **射出成型での役割** |
| --- | --- |
| **Client** | 成型機・検査端末 |
| **API Gateway** | データ受付 |
| **Lambda** | データ処理・異常検知・分析 |
| **S3** | データ保存・分析基盤 |

| **S3の利点** | **活用されているか** | **説明** |
| --- | --- | --- |
| **サーバーレスで管理が不要** | ✅ | S3はインフラ管理不要。Lambdaと組み合わせることで、完全サーバーレスなデータ処理が実現。 |
| **使用するときだけ費用が掛かる** | ✅ | データ保存・取得・処理は必要なときだけ実行されるため、コスト効率が非常に高い。 |
| **OSのアップデート不要** | ✅ | S3自体はマネージドサービスなので、ユーザーがOSやパッチ管理をする必要がない。 |
| **容量無制限で自動スケーリング** | ✅ | 成型機や検査工程から大量のデータ（画像、ログなど）を保存しても、容量制限なしで対応可能。 |
| **セキュリティ機能が豊富（アクセス制御、CORSなど）** | ✅ | IAMポリシーや署名付きURL、CORS設定により、社内外の安全なデータ共有が可能。 |

# **🏭 製造業の文脈での活用例**

- **射出成型の検査画像保存** → 容量無制限で保存可能、リアルタイム処理も可能。
- **成型条件ログの蓄積と分析** → サーバーレスで自動保存、AthenaやBIツールで分析。
- **外部業者とのデータ共有** → 署名付きURLで安全に一時的アクセスを提供。
- **不良品のトレーサビリティ** → 長期保存と検索が容易、セキュリティも確保。
